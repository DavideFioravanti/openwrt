--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -117,7 +117,7 @@ POST_UNINSTALL = :
 
 # the headerfile of linux kernels 2.6.x contain to much arithmetic
 # with void pointers (which is allowed for gcc!)
-@KERNEL_2_6_FALSE@am__append_6 = -Wpointer-arith
+@KERNEL_2_6_FALSE@am__append_6 =
 subdir = src
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/configure.in
######################################################################################
##
## Probabilmente questa parte non serve perchè già c'è
##
#--- a/src/common/drv_dsl_cpe_os_linux.c
#+++ b/src/common/drv_dsl_cpe_os_linux.c
#@@ -1203,6 +1197,9 @@ static void DSL_DRV_NlSendMsg(DSL_char_t
# }
# #endif
# 
#+static struct class *dsl_class;
#+static dev_t dsl_devt;
#+
# /* Entry point of driver */
# int __init DSL_ModuleInit(void)
# {
#@@ -1241,6 +1238,10 @@ int __init DSL_ModuleInit(void)
# 
#    DSL_DRV_DevNodeInit();
# 
#+   dsl_class = class_create(THIS_MODULE, "dsl_cpe_api0");
#+   dsl_devt = MKDEV(DRV_DSL_CPE_API_DEV_MAJOR, 0);
#+   device_create(dsl_class, NULL, dsl_devt, NULL, "dsl_cpe_api0");
#+
#    return 0;
# }
# 
#@@ -1248,6 +1249,11 @@ void __exit DSL_ModuleCleanup(void)
# {
#    printk("Module will be unloaded"DSL_DRV_CRLF);
# 
#+   device_destroy(dsl_class, dsl_devt);
#+   dsl_devt = NULL;
#+   class_destroy(dsl_class);
#+   dsl_class = NULL;
#+
#    unregister_chrdev(nMajorNum, DRV_DSL_CPE_API_DEV_NAME);
#    
#    DSL_DRV_Cleanup();
######################################################################################
##
## Questa parte qui sotto invece non so se serve perchè non ho trovato traccia del metdo DSL_DRV_DEV_MeiTcLayerSignaling da nessuna parte
##
#--- a/src/device/drv_dsl_cpe_device_vrx.c
#+++ b/src/device/drv_dsl_cpe_device_vrx.c
#@@ -5337,6 +5337,7 @@ DSL_Error_t DSL_DRV_DEV_HybridTypeGet(
# #undef DSL_DBG_BLOCK
# #define DSL_DBG_BLOCK DSL_DBG_NOTIFICATIONS
# 
#+#if 0
# DSL_Error_t DSL_DRV_DEV_MeiTcLayerSignaling
# (
#    DSL_Context_t *pContext,
#@@ -5384,6 +5385,15 @@ DSL_Error_t DSL_DRV_DEV_MeiTcLayerSignal
# 
#    return nErrCode;
# }
#+#else
#+DSL_Error_t DSL_DRV_DEV_MeiTcLayerSignaling
#+(
#+   DSL_Context_t *pContext,
#+   DSL_TcLayerSelection_t nTcLayer)
#+{
#+   return DSL_SUCCESS;
#+}
#+#endif
# 
# DSL_Error_t DSL_DRV_DEV_MeiShowtimeSignaling
# (
